---
- import_playbook: update_firewall.yml


- import_playbook: update_hosts.yml


- name: create service account
  hosts: rs:!ies:!unmanaged_systems
  become: true
  tasks:
    - name: create service group
      group:
        name: "{{ _irods_service_group_name }}"
        system: yes

    - name: create service account
      user:
        name: "{{ _irods_service_account_name }}"
        system: yes
        home: /var/lib/irods
        createhome: yes
        group: "{{ _irods_service_group_name }}"
        comment: iRODS Administrator


- name: install resource server package
  hosts: rs:!ies:!unmanaged_systems
  become: true
  gather_facts: false
  tasks:
    - import_tasks: tasks/install_resource_pkg.yml
    - import_tasks: tasks/install_plugins.yml


- name: prepare uuid generation
  hosts: rs
  tasks:
    - include_tasks: tasks/install_generateuuid.yml


- name: configure iRODS
  hosts: rs
  become: "{{ _become_svc_acnt }}"
  become_user: "{{ _irods_service_account_name }}"
  gather_facts: false
  tasks:
    - include_tasks: tasks/cfg_irods.yml

    - name: initialize resource server connection to IES
      irods_clerver_auth:
        ies: "{{ groups['ies'][0] }}"
        password: "{{ _irods_clerver_password }}"

  post_tasks:
    - name: start iRODS
      irods_start:

  handlers:
    - name: reload rules
      file:
        path: /etc/irods/core.re
        state: touch


- import_playbook: mk_storage_resources.yml
- import_playbook: mk_resource_hierarchies.yml


- name: bring up all resources
  hosts: rs
  become: "{{ _become_svc_acnt }}"
  become_user: "{{ _irods_service_account_name }}"
  gather_facts: false
  tasks:
    - name: bring up storage storage resource and parents
      irods_resource_up:
        resource: "{{ item.name }}"
        status: up
      with_items: "{{ _irods_storage_resources }}"
