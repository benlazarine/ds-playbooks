---
- name: configure iRODS
  hosts: irods
  become: "{{ false if ansible_user|default('') == _irods_service_account_name else true }}"
  become_user: "{{ _irods_service_account_name }}"
  become_flags: '-i'
  vars:
    dbms_host: "{{ groups['dbms'][0] }}"
    rabbitmq_user_info: "{{ _rabbitmq_user }}:{{ _rabbitmq_password }}"
    rabbitmq_authority: "{{ rabbitmq_user_info }}@{{ groups['rabbitmq'][0] }}:{{ _rabbitmq_port }}"
    rabbitmq_path: /{{ _rabbitmq_vhost | replace('/', '%2F') }}
    rabbitmq_uri: amqp://{{ rabbitmq_authority }}{{ rabbitmq_path }}
  roles:
    - role: cyverse.irods-cfg
      vars:
        irods_cfg_client_server_policy: CS_NEG_REFUSE
        irods_cfg_default_hash_scheme: MD5
        irods_cfg_default_number_of_transfer_threads: "{{
          _irods_default_number_of_transfer_threads }}"
        irods_cfg_default_resource_directory: "{{ _irods_default_vault }}"
        irods_cfg_default_resource_name: "{{ _irods_default_resource }}"
        irods_cfg_environment_variables: "{{
          { 'IRODS_AMQP_URI': rabbitmq_uri } if inventory_hostname in groups['ies'] else
          {} }}"
        irods_cfg_federation: "{{ _irods_federation }}"
        irods_cfg_host_entries: "{{ [
            {
              'address_type': 'local',
              'addresses': ([inventory_hostname] + _irods_host_aliases)
            }
          ] if (_irods_host_aliases | count) > 0 else [] }}"
        irods_cfg_icat: "{{ None if inventory_hostname not in groups['ies'] else
                            {
                              'db_host': dbms_host,
                              'db_password': _dbms_password,
                              'db_port': _dbms_port,
                              'db_username': _dbms_username
                            } }}"
        irods_cfg_icat_host: "{{ inventory_hostname if inventory_hostname in groups['ies'] else
                                 _irods_ies }}"
        irods_cfg_maximum_number_of_concurrent_rule_engine_server_processes: "{{
          _irods_max_num_re_procs }}"
        irods_cfg_negotiation_key: "{{ _irods_negotiation_key }}"
        irods_cfg_re_additional_rulebases:
          - ipc-custom
          - ipc-housekeeping
        irods_cfg_server_control_plane_key: "{{ _irods_server_control_plane_key }}"
        irods_cfg_server_port_range_end: "{{ _irods_server_port_range_end }}"
        irods_cfg_server_port_range_start: "{{ _irods_server_port_range_start }}"
        irods_cfg_service_account_name: "{{ _irods_service_account_name }}"
        irods_cfg_service_group_name: "{{ _irods_service_group_name }}"
        irods_cfg_transfer_buffer_size_for_parallel_transfer: "{{
          _irods_parallel_transfer_buffer_size }}"
        irods_cfg_zone_key: "{{ _irods_zone_key }}"
        irods_cfg_zone_name: iplant
        irods_cfg_zone_user: "{{ _irods_clerver_user }}"

  tasks:
    - name: add common command scripts
      copy:
        src: "{{ item }}"
        dest: /var/lib/irods/iRODS/server/bin/cmd
        mode: u+x
      with_fileglob:
        - "files/cmd-common/*"

    - name: place static config in /etc/irods
      copy:
        src: "{{ item }}"
        dest: /etc/irods/{{ item | basename }}
        mode: u+r
      with_fileglob:
        - "files/etc/*"
      notify:
        - reload rules

    - name: place dynamic rule bases in /etc/irods
      template:
        src: "{{ item }}"
        dest: /etc/irods/{{ item | basename | regex_replace('.j2$') }}
        mode: u+r
      with_fileglob:
        - "templates/etc/*"
      notify:
        - reload rules

  pre_tasks:
    - name: initialize flag
      set_fact:
        irods_cfg_made_changes: false

  post_tasks:
    - when: _restart_irods and irods_cfg_made_changes
      include_tasks: tasks/restart_irods.yml

  handlers:
    - name: reload rules
      file:
        path: /etc/irods/core.re
        state: touch


- name: Install AMQP publishing script
  hosts: ies
  become: "{{ false if ansible_user|default('') == _irods_service_account_name else true }}"
  become_user: "{{ _irods_service_account_name }}"
  gather_facts: false
  tasks:
    - import_tasks: tasks/install_amqptopicsend.yml


- name: configure bisque client
  hosts: ies
  become: "{{ false if ansible_user|default('') == _irods_service_account_name else true }}"
  become_user: "{{ _irods_service_account_name }}"
  gather_facts: false
  tasks:
    - name: install bisque_paths.py
      get_url:
        validate_certs: no
        url: https://gitlab.cyverse.org/ds/bisque_support/raw/master/bisque_paths/bisque_paths.py
        dest: /var/lib/irods/iRODS/server/bin/cmd
        mode: u+wx
        force: true
      tags:
        # This may not be needed in ansible 2.5
        - non_idempotent

    - name: remove bisque_ops.py
      file:
        path: /var/lib/irods/iRODS/server/bin/cmd/bisque_ops.py
        state: absent

    - name: place .bisque
      when: _bisque_url is defined
      template:
        src: templates/bisque.j2
        dest: "{{ ansible_env.HOME }}/.bisque"
        mode: u=r
