---
- name: Build image
  hosts: localhost
  tasks:
    - include_vars:
        dir: "{{ inventory_dir }}/group_vars"
        files_matching: 'irods\..*'

    - include_vars:
        dir: "{{ inventory_dir }}/group_vars"
        files_matching: 'rs\..*'

    - set_fact:
        irods_default_resource: _IRODS_DEFAULT_RESOURCE_
        irods_default_repl_resource: _IRODS_DEFAULT_RESOURCE_

    - include_tasks: tasks/build_plugins.yml

    - name: create command scripts staging directory
      file:
        path: "{{ _build_dir }}/cmd"
        state: directory

    - name: add common command scripts
      copy:
        src: "{{ item }}"
        dest: "{{ _build_dir }}/cmd"
      with_fileglob:
        - "files/cmd-common/*"

    - import_role:
        name: cyverse.irods-cfg
      vars:
        irods_cfg_chown: false
        irods_cfg_client_server_policy: "{{ _irods_client_server_policy }}"
        irods_cfg_default_dir_mode: "{{ _irods_default_dir_mode }}"
        irods_cfg_default_file_mode: "{{ _irods_default_file_mode }}"
        irods_cfg_default_hash_scheme: "{{ _irods_default_hash_scheme }}"
        irods_cfg_default_number_of_transfer_threads: "{{
          _irods_default_number_of_transfer_threads }}"
        irods_cfg_default_resource_directory: /irods_vault/_IRODS_STORAGE_RESOURCE_
        irods_cfg_default_resource_name: "{{ _irods_default_resource }}"
        irods_cfg_icat_host: "{{ _irods_ies }}"
        irods_cfg_host: rs
        irods_cfg_host_entries:
          - address_type: local
            addresses:
              - "{{ irods_cfg_host }}"
              - _IRODS_RS_CNAME_
        irods_cfg_negotiation_key: __IRODS_NEGOTIATION_KEY__
        irods_cfg_re_additional_rulebases:
          - ipc-custom
          - ipc-housekeeping
        irods_cfg_root_dir: "{{ _build_dir }}"
        irods_cfg_server_control_plane_key: __IRODS_SERVER_CONTROL_PLANE_KEY__
        irods_cfg_server_port_range_end: 20009
        irods_cfg_server_port_range_start: 20000
        irods_cfg_service_account_name: "{{ _irods_service_account_name }}"
        irods_cfg_service_group_name: "{{ _irods_service_group_name }}"
        irods_cfg_transfer_buffer_size_for_parallel_transfer: "{{
          _irods_parallel_transfer_buffer_size }}"
        irods_cfg_validate: false
        irods_cfg_zone_key: __IRODS_ZONE_KEY__
        irods_cfg_zone_name: "{{ _irods_zone_name }}"
        irods_cfg_zone_user: _IRODS_USER_NAME_

    - name: stage dynamic rule bases
      template:
        src: "{{ item }}"
        dest: "{{ _build_dir }}/etc/irods/{{ item | basename | regex_replace('.j2$') }}"
      with_fileglob:
        - "templates/rule-bases/*"

    - name: stage static rule bases
      copy:
        src: "{{ item }}"
        dest: "{{ _build_dir }}/etc/irods"
      with_fileglob:
        - "files/rule-bases/*"

    - name: copy .dockerignore
      copy:
        src: files/docker-rs/dockerignore
        dest: "{{ _build_dir }}/.dockerignore"

    - name: copy resource server docker scripts
      copy:
        src: files/docker-rs/{{ item }}
        dest: "{{ _build_dir }}"
      with_items:
        - on-build-instantiate.sh
        - periphery.sh
        - Dockerfile

    - name: retrieve previous docker image
      docker_image:
        name: cyverse/ds-irods-rs-onbuild
      tags:
        - no_testing

    - name: inspect previous docker image
      docker_image_facts:
        name: cyverse/ds-irods-rs-onbuild
      register: response
      tags:
        - no_testing

    - name: extract previous docker image Id
      set_fact:
        previous_id: "{{ response.images[0].Id }}"
      tags:
        - no_testing

    - name: build docker image
      docker_image:
        name: cyverse/ds-irods-rs-onbuild
        tag: "{{ ansible_date_time.iso8601_basic_short }}"
        path: "{{ _build_dir }}"
        force: true
      register: response
      changed_when: response.image.Id != previous_id
      tags:
        - no_testing

    - name: remove duplicate docker image
      when: response is not changed
      docker_image:
        name: cyverse/ds-irods-rs-onbuild
        tag: "{{ ansible_date_time.iso8601_basic_short }}"
        state: absent
      tags:
        - no_testing

    - name: tag new image as latest
      when: response is changed
      docker_image:
        name: cyverse/ds-irods-rs-onbuild
        tag: latest
        path: "{{ _build_dir }}"
        force: true
      tags:
        - no_testing

    - name: push new images to dockerhub
      when: response is changed and _irods_publish_rs_image
      docker_image:
        name: cyverse/ds-irods-rs-onbuild
        tag: "{{ item }}"
        push: true
      with_items:
        - "{{ ansible_date_time.iso8601_basic_short }}"
        - latest
      tags:
        - no_testing
