---
- name: test the default variables populate the configs correctly
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    aegis_env: "{{ lookup('template', '../templates/etc/irods/aegis-env.re.j2') }}"
    bisque_env: "{{ lookup('template', '../templates/etc/irods/bisque-env.re.j2') }}"
    ipc_env: "{{ lookup('template', '../templates/etc/irods/ipc-env.re.j2') }}"
    sanimal_env: "{{ lookup('template', '../templates/etc/irods/sanimal-env.re.j2') }}"
    sernec_env: "{{ lookup('template', '../templates/etc/irods/sernec-env.re.j2') }}"
  tasks:
    - name: verify constants expand correctly in ipc-env.re.j2
      assert:
        that:
          - ipc_env | search("ipc_AMQP_EPHEMERAL = true")
          - ipc_env | search("ipc_DEFAULT_REPL_RESC = 'demoResc'")
          - ipc_env | search("ipc_RE_HOST = 'dstesting_ies_centos6_1.dstesting_default'")
          - ipc_env | search("ipc_MAX_NUM_RE_PROCS = 4")

    - name: verify constants expand correctly in aegis-env.re.j2
      assert:
        that:
          - aegis_env | search("aegis_INGEST_RESC = 'aegisIngestRes'")
          - aegis_env | search("aegis_REPL_RESC = 'aegisReplRes'")

    - name: verify constants expand correctly in bisque-env.re.j2
      assert:
        that:
          - bisque_env | search("bisque_IRODS_URL_BASE = 'irods://dstesting_ies_centos6_1.dstesting_default'")

    - name: verify constants expoand correctly in sanimal-env.re.j2
      assert:
        that:
          - sanimal_env | search('sanimal_BASE_COLL = \n' | regex_escape)

    - name: verify sernec constants expand correctly in sernec-env.re.j2
      assert:
        that:
          - sernec_env | search('sernec_OWNERS = list()' | regex_escape)
          - sernec_env | search('sernec_WRITERS = list()' | regex_escape)
          - sernec_env | search('sernec_READERS = list()' | regex_escape)

- name: test aegis params are set correctly
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    irods_aegis_repl_resource: aegisReplication
    irods_aegis_resource: aegisIngest
    aegis_env: "{{ lookup('template', '../templates/etc/irods/aegis-env.re.j2') }}"
  tasks:
    - name: verify params
      assert:
        that:
          - aegis_env | search("aegis_INGEST_RESC = 'aegisIngest'")
          - aegis_env | search("aegis_REPL_RESC = 'aegisReplication'")

- name: test that ipc_MAX_NUM_RE_PROCS set correctly in ipc-env.re
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    irods_max_num_re_procs: 1
    ipc_env: "{{ lookup('template', '../templates/etc/irods/ipc-env.re.j2') }}"
  tasks:
    - name: verify ipc_MAX_NUM_RE_PROCS
      assert:
        that:
          - ipc_env | search("ipc_MAX_NUM_RE_PROCS = 1")

- name: test that single threaded resources are correctly added to ipc-env.re
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    single_threaded_resources:
      - resource-1
      - resource-2
    ipc_env: "{{ lookup('template', '../templates/etc/irods/ipc-env.re.j2') }}"
  tasks:
    - name: verify acSetNumThreads defined correctly in ipc-env.re
      assert:
        that:
          - ipc_env | search("ON($rescName == 'resource-1' && $clientAddr == ipc_IES_IP)" | regex_escape)
          - ipc_env | search("ON($rescName == 'resource-2' && $clientAddr == ipc_IES_IP)" | regex_escape)

- name: test that bisque-env.re gets generated correctly with a bisque iRODS host is provided
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    bisque_irods_host: custom.irods.host
    bisque_env: "{{ lookup('template', '../templates/etc/irods/bisque-env.re.j2') }}"
  tasks:
    - name: verify bisque_env
      assert:
        that:
         - bisque_env | search("bisque_IRODS_URL_BASE = 'irods://custom.irods.host'")

- name: test that sernec perm groups are generated correctly
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../group_vars/all.yml
  vars:
    sernec_owners:
      - own1
      - own2
    sernec_readers:
      - read1
      - read2
    sernec_writers:
      - write1
      - write2
    sernec_env: "{{ lookup('template', '../templates/etc/irods/sernec-env.re.j2') }}"
  tasks:
    - name: verify sernec_env
      assert:
        that:
         - sernec_env | search('sernec_OWNERS = list("own1", "own2")' | regex_escape)
         - sernec_env | search('sernec_WRITERS = list("write1", "write2")' | regex_escape)
         - sernec_env | search('sernec_READERS = list("read1", "read2")' | regex_escape)

- name: test common file deposition
  hosts: irods
  tasks:
    - name: Retrieve configuration files
      stat:
        path: /etc/irods/{{ item }}
      register: response
      failed_when: |
        not response.stat.exists
        or response.stat.pw_name != 'irods'
        or not response.stat.rusr
      with_items:
        - hosts_config.json
        - server_config.json
        - aegis.re
        - aegis-env.re
        - bisque.re
        - bisque-env.re
        - coge.re
        - ipc-amqp.re
        - ipc-custom.re
        - ipc-json.re
        - ipc-logic.re
        - ipc-uuid.re
        - ipc-env.re
        - sanimal.re
        - sanimal-env.re
        - sernec.re
        - sernec-env.re

    - name: Verify irods_environment.json is in place
      stat:
        path: /var/lib/irods/.irods/irods_environment.json
      register: response
      failed_when: not response.stat.exists

    - name: Verify sanimal-ingest is in place
      stat:
        path: /var/lib/irods/iRODS/server/bin/cmd/sanimal-ingest
      register: response
      failed_when: |
        not response.stat.exists
        or response.stat.pw_name != 'irods'
        or not response.stat.xusr

- name: test ies only file deposition
  hosts: ies
  gather_facts: false
  tasks:
    - name: Verify that amqptopicsend.py is in place
      stat:
        path: /var/lib/irods/iRODS/server/bin/cmd/amqptopicsend.py
      register: response
      failed_when: not response.stat.exists

- name: verify irods_environment.json contents
  hosts: irods
  gather_facts: false
  tasks:
    - name: retrieve irods_environment contents
      slurp:
        src: /var/lib/irods/.irods/irods_environment.json
      register: ieEncoded

    - set_fact:
        irods_environment: "{{ ieEncoded.content | b64decode }}"

    - name: verify irods_environment.json has correct contents
      assert:
        that:
          - irods_environment.irods_client_server_negotiation == 'request_server_negotiation'
          - irods_environment.irods_client_server_policy == 'CS_NEG_REFUSE'
          - irods_environment.irods_default_hash_scheme == 'MD5'
          - irods_environment.irods_default_resource == 'demoResc'
          - irods_environment.irods_server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_key'
          - irods_environment.irods_user_name == 'rods'
          - irods_environment.irods_zone_name == 'iplant'

- name: verify hosts_config has correct contents
  hosts: dstesting_ies_centos6_1.dstesting_default
  gather_facts: false
  tasks:
    - name: retrieve contents
      slurp:
        src: /etc/irods/hosts_config.json
      register: hcEncoded

    - set_fact:
        hosts_config: "{{ hcEncoded.content | b64decode }}"

    - name: verify contents
      assert:
        that:
          - hosts_config.host_entries[0].address_type == 'local'
          - hosts_config.host_entries[0].addresses[0].address == 'dstesting_ies_centos6_1.dstesting_default'
          - hosts_config.host_entries[0].addresses[1].address == 'alias-1'
          - hosts_config.host_entries[0].addresses[2].address == 'alias-2'

- name: verify IES specific config file contents
  hosts: ies
  gather_facts: false
  vars:
    expected_driver: "{{
      '/usr/pgsql-9.3/lib/psqlodbca.so' if ansible_distribution_major_version == '6' else
      '/usr/lib64/psqlodbc.so'}}"
  tasks:
    - name: retrieve server_config contents
      slurp:
        src: /etc/irods/server_config.json
      register: scEncoded

    - set_fact:
        server_config: "{{ scEncoded.content | b64decode }}"

    - name: verify server_config.json has correct contents
      assert:
        that:
          - server_config.advanced_settings.default_number_of_transfer_threads == 4
          - 'server_config.advanced_settings.transfer_buffer_size_for_parallel_transfer_in_megabytes
               == 4'
          - server_config.default_resource_directory == None
          - server_config.default_resource_name == 'demoResc'
          - server_config.icat_host == 'dstesting_ies_centos6_1.dstesting_default'
          - server_config.negotiation_key == 'TEMPORARY_32byte_negotiation_key'
          - server_config.re_rulebase_set[0].filename == 'ipc-custom'
          - server_config.server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_key'
          - server_config.server_port_range_end == 20009
          - server_config.server_port_range_start == 20000
          - server_config.zone_key == 'TEMPORARY_zone_key'
          - server_config.zone_user == 'rods'
          - server_config.federation | length == 0
          - 'server_config.environment_variables.IRODS_AMQP_URI
               == "amqp://guest:guest@dstesting_amqp_1.dstesting_default:5672/%2F"'

    - name: retrieve .odbc.ini contents
      slurp:
        src: /var/lib/irods/.odbc.ini
      register: oEncoded

    - set_fact:
        odbc: "{{ oEncoded.content | b64decode }}"

    - name: verify .odbc.ini contents
      assert:
        that:
          - odbc | search('driver = ' ~ expected_driver | regex_escape)
          - odbc | search('Database = ICAT' | regex_escape)
          - odbc | search('Port = 5432' | regex_escape)
          - odbc | search('Servername = dstesting_dbms_1.dstesting_default' | regex_escape)


- name: verify server_config.json contents on resource servers
  hosts: rs
  gather_facts: false
  tasks:
    - name: retrieve server_config contents
      slurp:
        src: /etc/irods/server_config.json
      register: scEncoded

    - set_fact:
        server_config: "{{ scEncoded.content | b64decode }}"

    - name: verify server_config.json has correct contents
      assert:
        that:
          - server_config.advanced_settings.default_number_of_transfer_threads == 4
          - 'server_config.advanced_settings.transfer_buffer_size_for_parallel_transfer_in_megabytes
               == 4'
          - server_config.default_resource_directory == '/var/lib/irods/Vault'
          - server_config.default_resource_name == 'demoResc'
          - server_config.icat_host == 'dstesting_ies_centos6_1.dstesting_default'
          - server_config.negotiation_key == 'TEMPORARY_32byte_negotiation_key'
          - server_config.re_rulebase_set[0].filename == 'ipc-custom'
          - server_config.server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_key'
          - server_config.server_port_range_end == 20009
          - server_config.server_port_range_start == 20000
          - server_config.zone_key == 'TEMPORARY_zone_key'
          - server_config.zone_user == 'rods'
          - server_config.federation | length == 0
          - server_config.environment_variables == {}

- name: test resource server configured correctly
  hosts: rs
  gather_facts: false
  tasks:
    - name: Verify database_config.json is not in place
      stat:
        path: /etc/irods/database_config.json
      register: response
      failed_when: response.stat.exists

    - name: Verify that amqptopicsend.py is not in place
      stat:
        path: /var/lib/irods/iRODS/server/bin/cmd/amqptopicsend.py
      register: response
      failed_when: response.stat.exists
