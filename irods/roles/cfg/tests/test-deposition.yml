---
- name: test the configuration and rule files are placed correctly
  hosts: localhost
  become: true
  vars_files:
    - vars/host_aliases.yml

  pre_tasks:
    - include: tasks/clean.yml

  roles:
    - ../../ansible-cyverse-irods-cfg

  post_tasks:
    - name: Retrieve configuration files
      stat:
        path: /etc/irods/{{ item }}
      register: response
      failed_when: not response.stat.exists
      with_items:
        - aegis.re
        - aegis-env.re
        - bisque.re
        - bisque-env.re
        - coge.re
        - ipc-amqp.re
        - ipc-custom.re
        - ipc-json.re
        - ipc-logic.re
        - ipc-uuid.re
        - ipc-env.re
        - sernec.re
        - sernec-env.re

    - name: Verify irods_environment.json is in place
      stat:
        path: /var/lib/irods/.irods/irods_environment.json
      register: response
      failed_when: not response.stat.exists

    - name: Verify that amqptopicsend.py is in place
      stat:
        path: /var/lib/irods/iRODS/server/bin/cmd/amqptopicsend.py
      register: response
      failed_when: not response.stat.exists

- name: verify hosts_config has correct contents
  hosts: localhost
  become: true
  gather_facts: false
  vars:
    - hosts_config: "{{ lookup('file', '/etc/irods/hosts_config.json') }}"
  tasks:
    - name: verify contents
      assert:
        that:
          - hosts_config.host_entries[0].address_type == 'local'
          - hosts_config.host_entries[0].addresses[0].address == 'localhost'
          - hosts_config.host_entries[0].addresses[1].address == 'alias-1'
          - hosts_config.host_entries[0].addresses[2].address == 'alias-2'

- name: verify irods server cfg files have correct contents
  hosts: localhost
  become: true
  gather_facts: false
  vars:
    - irods_environment: "{{ lookup('file', '/var/lib/irods/.irods/irods_environment.json') }}"
    - server_config: "{{ lookup('file', '/etc/irods/server_config.json') }}"
  tasks:
    - name: verify irods_environment.json is created correctly
      assert:
        that:
          - irods_environment.irods_client_server_negotiation == 'request_server_negotiation'
          - irods_environment.irods_client_server_policy == 'CS_NEG_REFUSE'
          - irods_environment.irods_default_hash_scheme == 'MD5'
          - irods_environment.irods_default_resource == 'demoResc'
          - irods_environment.irods_server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_key'
          - irods_environment.irods_user_name == 'rods'
          - irods_environment.irods_zone_name == 'iplant'

    - name: verify server_config.json.j2 is created correctly
      assert:
        that:
          - server_config.advanced_settings.default_number_of_transfer_threads == 4
          - 'server_config.advanced_settings.transfer_buffer_size_for_parallel_transfer_in_megabytes
               == 4'
          - server_config.default_resource_directory == '/var/lib/irods/iRODS/Vault'
          - server_config.default_resource_name == 'demoResc'
          - server_config.icat_host == 'localhost'
          - server_config.negotiation_key == 'TEMPORARY_32byte_negotiation_key'
          - server_config.re_rulebase_set[0].filename == 'ipc-custom'
          - server_config.server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_key'
          - server_config.server_port_range_end == 20199
          - server_config.server_port_range_start == 20000
          - server_config.zone_key == 'TEMPORARY_zone_key'
          - server_config.zone_user == 'rods'
          - server_config.federation | length == 0
          - 'server_config.environment_variables.IRODS_AMQP_URI
               == "amqp://guest:guest@localhost:5672/%2F"'

- name: test resource server configured correctly
  hosts: localhost
  become: true
  gather_facts: false
  vars_files:
    - vars/icat_host.yml
  pre_tasks:
    - include: tasks/clean.yml

  roles:
    - role: ../../ansible-cyverse-irods-cfg

  post_tasks:
    - name: Verify database_config.json is not in place
      stat:
        path: /etc/irods/database_config.json
      register: response
      failed_when: response.stat.exists

    - name: Verify that amqptopicsend.py is not in place
      stat:
        path: /var/lib/irods/iRODS/server/bin/cmd/amqptopicsend.py
      register: response
      failed_when: response.stat.exists
