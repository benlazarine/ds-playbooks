#!/bin/bash
#
# Creates a collection as a given user for a given DE app execution
#
# USAGE:
#  de-create-collection clientUser collPath analId execId
#
# PARAMETERS:
#  clientUser   The iRODS user name of the client who owns the data
#  stagePath    The staging path of the object being moved.
#  archivePath  The path to where the object is moved.
#  execId       The Id of the DE app execution that is generating the data
#               object
#  appId        The Id of the DE app that was executed


main()
{
  if [ "$#" -lt 4 ]
  then
    printf 'Too few input parameters\n' >&2
    return 1
  fi

  local clientUser="$1"
  local stagePath="$2"
  local archivePath="$3"
  local execId="$4"
  local appId="$5"

  if ! ichmod -M read "$clientUser" "$stagePath" 2>&1
  then
    printf 'WARN: Unable to give %s read access to %s\n' "$clientUser" "$stagePath"
  fi

  if ! clientUserName="$clientUser" imkdir -p "$archivePath"
  then
    return 1
  fi

  local kvs
  kvs=$(query_kvs "$archivePath")

  if [[ "$kvs" =~ CAT_NO_ROWS_FOUND: ]]
  then
    kvs=
  fi

  local execKV=ipc-execution-id="$execId"

  if ! [[ "$kvs" =~ $execKV ]]
  then
    if ! imeta adda -c "$archivePath" ipc-execution-id "$execId" UUID 2>&1
    then
      printf 'WARN: Unable to assign execution Id %s to collection %s\n' "$execId" "$archivePath"
    fi
  fi

  local appKV=ipc-analysis-id="$appId"

  if ! [[ "$kvs" =~ $appKV ]]
  then
    if ! imeta adda -c "$archivePath" ipc-analysis-id "$appId" UUID 2>&1
    then
      printf 'WARN: Unable to assign app Id %s to collection %s\n' "$appId" "$archivePath"
    fi
  fi
}


query_kvs()
{
  local collPath="$1"

  iquest '%s=%s' "select META_COLL_ATTR_NAME, META_COLL_ATTR_VALUE where COLL_NAME = '$collPath'" \
    2> /dev/null
}


main "$@"
