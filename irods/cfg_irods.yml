---
- name: configure bisque client
  hosts: ies
  become: "{{ false if ansible_user|default('') == irods_service_account_name else true }}"
  become_user: "{{ irods_service_account_name }}"
  gather_facts: true
  tasks:
    - when: bisque_url is defined
      block:
        - name: install bisque_ops.py
          get_url:
            url: https://biodev.ece.ucsb.edu/projects/bisquik/browser/bisque/contrib/irods/bisque_ops/bisque_ops.py?format=txt
            dest: "{{ ansible_env.HOME }}/iRODS/server/bin/cmd/bisque_ops.py"
            mode: u=rx

        - name: place .bisque
          template:
            src: templates/bisque.j2
            dest: "{{ ansible_env.HOME }}/.bisque"
            mode: u=r

- name: configure iRODS
  hosts: irods
  become: "{{ false if ansible_user|default('') == irods_service_account_name else true }}"
  become_user: "{{ irods_service_account_name }}"
  vars:
    dbms_host: "{{ groups['dbms'][0] }}"
    icat_host: "{{ groups['ies'][0] }}"
    rabbitmq_user_info: "{{ rabbitmq_user | default('guest')
                         }}:{{ rabbitmq_password | default('guest') }}"
    rabbitmq_authority: "{{ rabbitmq_user_info
                         }}@{{ groups['rabbitmq'][0]
                         }}:{{ rabbitmq_port | default(5672) }}"
    rabbitmq_path: /{{ rabbitmq_vhost | default('') | replace('/', '%2F') }}
    rabbitmq_uri: amqp://{{ rabbitmq_authority }}{{ rabbitmq_path }}
    _host_aliases: "{{ host_aliases | default([]) }}"
  roles:
    - role: cyverse.irods-cfg
      vars:
        irods_cfg_client_server_policy: CS_NEG_REFUSE
        irods_cfg_default_hash_scheme: MD5
        irods_cfg_default_number_of_transfer_threads: "{{ default_number_of_transfer_threads
                                                         | default(None) }}"
        irods_cfg_default_resource_name: "{{ irods_default_resource | default(None) }}"
        irods_cfg_environment_variables: "{{
          { 'IRODS_AMQP_URI': rabbitmq_uri } if inventory_hostname == icat_host else
          {} }}"
        irods_cfg_federation: "{{ ds_federation }}"
        irods_cfg_host_entries: "{{ [
            {
              'address_type': 'local',
              'addresses': ([inventory_hostname] + _host_aliases)
            }
          ] if (_host_aliases | count) > 0 else [] }}"
        irods_cfg_icat: "{{ None if inventory_hostname != icat_host else
                            {
                              'db_host': dbms_host,
                              'db_password': dbms_password,
                              'db_port': dbms_port | default(5432),
                              'db_username': dbms_username | default('irods')
                            } }}"
        irods_cfg_icat_host: "{{ icat_host }}"
        irods_cfg_maximum_number_of_concurrent_rule_engine_server_processes: "{{
          irods_max_num_re_procs
          | default(None) }}"
        irods_cfg_negotiation_key: "{{ negotiation_key }}"
        irods_cfg_re_additional_rulebases:
          - ipc-custom
        irods_cfg_server_control_plane_key: "{{ server_control_plane_key }}"
        irods_cfg_server_port_range_end: "{{ server_port_range_end | default(None) }}"
        irods_cfg_server_port_range_start: "{{ server_port_range_start | default(None) }}"
        irods_cfg_transfer_buffer_size_for_parallel_transfer: "{{ parallel_transfer_buffer_size
                                                                 | default(None) }}"
        irods_cfg_zone_key: "{{ zone_key }}"
        irods_cfg_zone_name: "{{ irods_zone | default(None) }}"
        irods_cfg_zone_user: "{{ irods_clerver_user | default('rods') }}"

  tasks:
    - name: place static config in /etc/irods
      copy:
        src: "{{ item }}"
        dest: /etc/irods/
        owner: "{{ irods_service_account_name }}"
        group: "{{ irods_service_group_name }}"
      with_fileglob:
        - "files/etc/*"
      notify:
        - reload rules

    - name: place dynamic rule bases in /etc/irods
      template:
        src: "{{ item }}"
        dest: /etc/irods/{{ item | basename | regex_replace('.j2$') }}
        owner: "{{ irods_service_account_name }}"
        group: "{{ irods_service_group_name }}"
      with_fileglob:
        - "templates/etc/irods/*"
      notify:
        - reload rules

  handlers:
    - name: reload rules
      file:
        path: /etc/irods/core.re
        state: touch

- name: Install AMQP publishing script
  hosts: ies
  become: "{{ false if ansible_user|default('') == irods_service_account_name else true }}"
  become_user: "{{ irods_service_account_name }}"
  gather_facts: false
  tasks:
    - include: tasks/install_amqptopicsend.yml

- name: set minimum free space for resource
  hosts: rs
  become: "{{ false if ansible_user|default('') == irods_service_account_name else true }}"
  become_user: "{{ irods_service_account_name }}"
  gather_facts: false
  tasks:
    - include: tasks/set_resc_free_space.yml

    - name: set context
      with_items: "{{ irods_storage_resources }}"
      shell: |
        if ! currentContext=$(iadmin lr '{{ item.name }}' | sed --quiet 's/^resc_context: //p')
        then
          exit 1
        fi

        if [ '{{ item.context }}' = "$currentContext" ]
        then
          exit 0
        fi

        if ! iadmin modresc '{{ item.name }}' context '{{ item.context }}'
        then
          exit 1
        fi

        printf changed
      register: out
      changed_when: out.stdout == 'changed'
